- name: Install tomcat 10 on ubuntu 22
  hosts: all
  become: yes
  vars:
    java_package_name: openjdk-11-jdk
    user_name: tomcat
    group_name: tomcat
    user_home: /opt/tomcat
    user_shell: /bin/false
    tomcat_version: "10.1.4"
    tomcat_major_version: "10"
    tomcat_service_name: tomcat.service
  tasks:
    - name: java installation
      ansible.builtin.apt:
        name: openjdk-11-jdk
        name: {{ java_package_name }}
        update_cache: yes
        state: present
    - name: create a tomcat group
      ansible.builtin.group:
        name: tomcat
        name: {{ group_name }}
        state: present
    - name: create a tomcat user
      ansible.builtin.user:
        name: tomcat
        name: {{ user_name }}
        create_home: yes
        group: tomcat
        home: /opt/tomcat
        shell: /bin/false
        group: {{ group_name }}
        home: {{ user_home }}
        shell: {{ user_shell }}
        state: present
    - name: extract tomcat 10.1.4
    - name: extract tomcat
      ansible.builtin.unarchive:
        src: https://www-eu.apache.org/dist/tomcat/tomcat-10/v10.1.4/bin/apache-tomcat-10.1.4.tar.gz
        src: "https://www-eu.apache.org/dist/tomcat/tomcat-{{ tomcat_major_version }}/v{{ tomcat_version }}/bin/apache-tomcat-{{ tomcat_version }}.tar.gz"
        remote_src: yes
        dest: /opt/tomcat
        dest: {{ user_home }}
    - name: create a symbolic link
      ansible.builtin.file:
        src: /opt/tomcat/apache-tomcat-10.1.4
        dest: /opt/tomcat/latest
        src: "{{ user_home }}/apache-tomcat-{{ tomcat_version }}"
        dest: "{{ user_home }}/latest"
        state: link
    - name: change permissions
      ansible.builtin.file:
        dest: /opt/tomcat
        dest: {{ user_home }}
        recurse: true
        owner: tomcat
        group: tomcat
        owner: {{ user_name }}
        group: {{ group_name }}
        state: directory
    - name: add execute permissions to shell files
      ansible.builtin.command: sudo sh -c 'chmod +x /opt/tomcat/latest/bin/*.sh'
      ansible.builtin.command: "sudo sh -c 'chmod +x {{ user_home }}/latest/bin/*.sh'"
    - name: Create a systemd unit file
      ansible.builtin.copy:
        src: tomcat.service
        dest: /etc/systemd/system/tomcat.service
        owner: tomcat
        group: tomcat
        owner: {{ user_name }}
        group: {{ group_name }}
    - name: reload daemon and start tomcat
      ansible.builtin.systemd:
        name: tomcat.service
        name: {{ tomcat_service_name }}
        daemon_reload: yes
        enabled: yes
        state: started
    - name: copy the users xml
      ansible.builtin.copy:
        src: tomcat-users.xml
        dest: /opt/tomcat/latest/conf/tomcat-users.xml
        owner: tomcat
        group: tomcat
        dest: "{{ user_home }}/latest/conf/tomcat-users.xml"
        owner: {{ user_name }}
        group: {{ group_name }}
    - name: copy the manager app context file
      ansible.builtin.copy:
        src: context.xml
        dest: /opt/tomcat/latest/webapps/manager/META-INF/context.xml
        owner: tomcat
        group: tomcat
        dest: "{{ user_home }}/latest/webapps/manager/META-INF/context.xml"
        owner: {{ user_name }}
        group: {{ group_name }}
    - name: copy the host manager app context file
      ansible.builtin.copy:
        src: hostmanager-context.xml
        dest: /opt/tomcat/latest/webapps/host-manager/META-INF/context.xml
        owner: tomcat
        group: tomcat
        dest: "{{ user_home }}/latest/webapps/host-manager/META-INF/context.xml"
        owner: {{ user_name }}
        group: {{ group_name }}
    - name: restart tomcat
      ansible.builtin.systemd:
        name: tomcat.service
        name: {{ tomcat_service_name }}
        state: restarted

